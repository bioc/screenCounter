% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runVoomScreen.R
\name{runVoomScreen}
\alias{runVoomScreen}
\title{Use \code{voom} to analyze a screen}
\usage{
runVoomScreen(se, groups, comparisons, reference.field, reference.level,
  norm.type.field, norm.type.level, gene.field, ..., annotation = NULL,
  lfc = 0, robust = TRUE, contrasts.fun = NULL,
  fname = "voom-screen.Rmd", commit = "auto", save.all = NULL)
}
\arguments{
\item{se}{A \linkS4class{SummarizedExperiment} object containing read counts for each barcode (row) and sample (column).
Alternatively, a database ID string or list, see \code{?"\link{gp.sa.core-data-inputs}"}.}

\item{groups}{String specifying the column of \code{colData(se)} containing the grouping factor, see \code{?"\link{gp.sa.diff-args}"}.}

\item{comparisons}{A list of character vectors specifying simple contrasts to perform between groups, see \code{?"\link{gp.sa.diff-args}"}.}

\item{reference.field}{String specifying the column of \code{colData(se)} containing the type of each sample (i.e., reference or not).}

\item{reference.level}{Character vector specifying the reference levels of the column named by \code{reference.field}.}

\item{norm.type.field}{String specifying the field of \code{rowData(se)} containing the gene type for each barcode.}

\item{norm.type.level}{Character vector specifying the gene types on which to perform normalization.}

\item{gene.field}{String specifying the field of \code{rowData(se)} that contains the gene identifier for each barcode.}

\item{...}{Further arguments to pass to \code{\link{runVoom}}.}

\item{annotation}{Character vector specifying feature annotation to carry through into the result table.}

\item{lfc}{Numeric scalar specifying a log-fold change threshold to be used in \code{\link{treat}}.
A value of zero will default to the standard analysis with \code{\link{eBayes}}.}

\item{robust}{Logical scalar indicating whether robust empirical Bayes shrinkage should be used in \code{\link{eBayes}}.}

\item{contrasts.fun}{A list of custom contrasts information, see \code{?"\link{gp.sa.diff-args}"}.}

\item{fname}{String containing the path to an output Rmarkdown file.}

\item{commit}{String specifying the auto-committing behavior, see \code{?"\link{gp.sa.core-auto-commits}"}.}

\item{save.all}{Logical scalar indicating whether the returned \linkS4class{DAScreenStatFrame}s should also be saved to file.
Defaults to \code{FALSE} if \code{se} is a SummarizedExperiment without provenance information, and \code{TRUE} otherwise.}
}
\value{
A \linkS4class{List} containing two Lists, \code{barcode} and \code{gene}.
Each list contains barcode- and gene-level result tables as \linkS4class{DAScreenStatFrame}s from all contrasts.
If \code{gene.field=NA}, only the \code{barcode} List is returned.

A Rmarkdown file is also created at \code{fname}, containing the steps required to reproduce the analysis.
This also provides a basis for further customization.
}
\description{
Perform a \code{voom} analysis on a count matrix from a sequencing screen to detect differentially abundant barcodes across samples.
}
\details{
This function is largely a wrapper around \code{\link{runVoom}}, with three additional features:
\itemize{
\item Filtering based on reference samples, see below.
If \code{reference.field=NULL}, default edgeR filtering is used instead based \code{\link{filterByExpr}}.
If \code{reference.field=NA}, no filtering is performed.
\item Normalization based on non-targeting genes (NTGs) and/or non-essential genes (NEGs), see below.
If \code{norm.type.field=NULL}, default edgeR normalization is used instead based on \code{\link{calcNormFactors}}.
If \code{norm.type.field=NA}, no normalization is performed beyond library size normalization.
\item Consolidation of per-barcode results into per-gene results, in experiments where multiple barcodes (i.e., guides, shRNAs) target the same gene; see below.
If \code{gene.field=NA}, no consolidation is performed.
}
}
\section{Filtering on reference samples}{

We compute the log-average CPM across reference samples for each barcode.
We define a filtering threshold based on the median absolute deviation (MAD) below the median of the log-average CPMs across barcodes.
Barcodes that have log-average CPMs that are more than three MADs below the median are discarded,
as these correspond to barcodes that were most likely missing from the original pool during its manufacture.

Technically, this filtering strategy is not independent as it can theoretically enrich for barcodes that are upregulated in the reference.
In practice, this is not an issue as the filtering is only designed to remove outliers.
The density of barcodes around the filter boundary is so low that there will be no noticeable effect on type I error.
}

\section{Normalization with control barcodes}{

Restricting the normalization to only use control barcodes weakens the assumption of a non-DE majority of barcodes.
We currently use TMM normalization (i.e., robust average of a ratio) rather than methods based on a robust average of expression within each sample.
This avoids inflated errors due to the greater variance of the distribution of expression values compared to the ratio.
}

\section{Consolidating barcodes to genes}{

We use Simes' method as it is fast, statistically rigorous and able to detect genes with only a minority of differentially abundant barcodes.
The exact implementation uses the \code{\link{combineTests}} function from the \pkg{csaw} package.
We also report the abundance and log-fold changes of the best barcode within each gene.
}

\examples{
# Setting up a new project.
library(gp.sa.core)
proj <- tempfile()
newProject(proj, title="Aaron's project",
    description="This is one of Aaron's projects")

# Mocking up an example dataset.
N <- 1000
mu <- 2^runif(N, 2, 10)
y <- matrix(rnbinom(N * 6, mu=mu, size=10), ncol=6)
g <- gl(2, 3)

library(SummarizedExperiment)
se <- SummarizedExperiment(y)
rowData(se)$type <- sample(c("endog", "NTG", "NEG"), N, replace=TRUE)
rowData(se)$gene <- paste0("GENE_", sample(100, N, replace=TRUE))
colData(se)$group <- g

report <- file.path(proj, "voom-screen.Rmd")
out <- runVoomScreen(se, groups="group",
    comparisons=list(c("2", "1")),
    norm.type.field="type", norm.type.level="NEG",
    reference.field="group", reference.level="1",
    gene.field="gene", fname=report)

# Returns the Rmarkdown report and analysis results.
file.exists(report)
out
out[[1]]

}
\author{
Aaron Lun
}
