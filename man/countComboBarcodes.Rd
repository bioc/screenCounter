% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/countComboBarcodes.R
\name{countComboBarcodes}
\alias{countComboBarcodes}
\alias{matrixOfComboBarcodes}
\title{Count combinatorial barcodes}
\usage{
countComboBarcodes(fastq, template, choices, substitutions = TRUE,
  deletions = TRUE)

matrixOfComboBarcodes(files, ..., BPPARAM = SerialParam())
}
\arguments{
\item{fastq}{String containing the path to a FASTQ file containing single-end data,
or a connection object to such a file.}

\item{template}{A template for the barcode structure, see \code{\link{?createBarcodes}} for details.}

\item{choices}{A \linkS4class{List} of potential sequences for each variable region in \code{template}.
Each row should correspond to a barcode and each column should contain a character vector of sequences.}

\item{substitutions}{Logical scalar specifying whether substitutions should be allowed when matching to variable regions.}

\item{deletions}{Logical scalar specifying whether deletions should be allowed when matching to variable regions.}

\item{files}{A character vector of paths to FASTQ files.}

\item{...}{Further arguments to pass to \code{countComboBarcodes}.}

\item{BPPARAM}{A \linkS4class{BiocParallelParam} object specifying how parallelization is to be performed across files.}
}
\value{
\code{countComboBarcodes} returns a \linkS4class{DataFrame} where each row corresponds to a combinatorial barcode.
It contains \code{keys}, a nested \linkS4class{DataFrame} where each column corresponds to an element of \code{choices} and contains the indices of the sequences in each combinatorial barcode;
and \code{counts}, an integer vector containing the frequency of each barcode.

\code{matrixOfComboBarcodes} returns the same output as \code{\link{combineComboCounts}},
i.e., a list containing a count matrix of frequencies for each combinatorial barcode in each \code{files}.
}
\description{
Count combinatorial barcodes for screen sequencing experiments where entities are distinguished based on random combinations of a small pool of known sequences.
}
\details{
Certain screen sequencing experiments take advantage of combinatorial complexity to generate a very large pool of unique barcode sequences.
Only a subset of all possible combinatorial barcodes will be used in any given experiment.
This function only counts the combinations that are actually observed, improving efficiency over a more conventional approach (i.e., to generate all possible combinations and use \code{\link{countSingleBarcodes}} to count their frequency).

If \code{substitutions=TRUE}, only one mismatch is allowed across all variable regions,
\emph{not} per variable region.
Similarly, if \code{deletions=TRUE}, only one deletion is allowed across all variable regions.
If both are set, only one deletion or mismatch is allowed across all variable regions,
i.e., there is a maximum edit distance of 1 from any possible reference combination.
}
\examples{
# Creating an example dual barcode sequencing experiment.
known.pool <- c("AGAGAGAGA", "CTCTCTCTC",
    "GTGTGTGTG", "CACACACAC")

N <- 1000
barcodes <- sprintf("ACGT\%sACGT\%sACGT",
   sample(known.pool, N, replace=TRUE),
   sample(known.pool, N, replace=TRUE))
names(barcodes) <- seq_len(N)

library(Biostrings)
tmp <- tempfile(fileext=".fastq")
writeXStringSet(DNAStringSet(barcodes), filepath=tmp, format="fastq")

# Counting the combinations.
output <- countComboBarcodes(tmp,
    template="ACGTNNNNNNNNNACGTNNNNNNNNNACGT",
    choices=list(first=known.pool, second=known.pool))
output$combination
head(output$count)

matrixOfComboBarcodes(c(tmp, tmp),
    template="ACGTNNNNNNNNNACGTNNNNNNNNNACGT",
    choices=list(first=known.pool, second=known.pool))
}
\author{
Aaron Lun
}
