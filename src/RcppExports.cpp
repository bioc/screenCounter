// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// setup_barcodes_combo_dual
SEXP setup_barcodes_combo_dual(SEXP constants, SEXP guide_list);
RcppExport SEXP _gp_sa_screen_setup_barcodes_combo_dual(SEXP constantsSEXP, SEXP guide_listSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type constants(constantsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type guide_list(guide_listSEXP);
    rcpp_result_gen = Rcpp::wrap(setup_barcodes_combo_dual(constants, guide_list));
    return rcpp_result_gen;
END_RCPP
}
// count_barcodes_combo_dual
SEXP count_barcodes_combo_dual(SEXP seqs, SEXP xptr);
RcppExport SEXP _gp_sa_screen_count_barcodes_combo_dual(SEXP seqsSEXP, SEXP xptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type seqs(seqsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xptr(xptrSEXP);
    rcpp_result_gen = Rcpp::wrap(count_barcodes_combo_dual(seqs, xptr));
    return rcpp_result_gen;
END_RCPP
}
// report_barcodes_combo_dual
SEXP report_barcodes_combo_dual(SEXP xptr);
RcppExport SEXP _gp_sa_screen_report_barcodes_combo_dual(SEXP xptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type xptr(xptrSEXP);
    rcpp_result_gen = Rcpp::wrap(report_barcodes_combo_dual(xptr));
    return rcpp_result_gen;
END_RCPP
}
// setup_barcodes_single
SEXP setup_barcodes_single(SEXP guides);
RcppExport SEXP _gp_sa_screen_setup_barcodes_single(SEXP guidesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type guides(guidesSEXP);
    rcpp_result_gen = Rcpp::wrap(setup_barcodes_single(guides));
    return rcpp_result_gen;
END_RCPP
}
// count_barcodes_single
SEXP count_barcodes_single(SEXP seqs, SEXP xptr);
RcppExport SEXP _gp_sa_screen_count_barcodes_single(SEXP seqsSEXP, SEXP xptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< SEXP >::type seqs(seqsSEXP);
    Rcpp::traits::input_parameter< SEXP >::type xptr(xptrSEXP);
    rcpp_result_gen = Rcpp::wrap(count_barcodes_single(seqs, xptr));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gp_sa_screen_setup_barcodes_combo_dual", (DL_FUNC) &_gp_sa_screen_setup_barcodes_combo_dual, 2},
    {"_gp_sa_screen_count_barcodes_combo_dual", (DL_FUNC) &_gp_sa_screen_count_barcodes_combo_dual, 2},
    {"_gp_sa_screen_report_barcodes_combo_dual", (DL_FUNC) &_gp_sa_screen_report_barcodes_combo_dual, 1},
    {"_gp_sa_screen_setup_barcodes_single", (DL_FUNC) &_gp_sa_screen_setup_barcodes_single, 1},
    {"_gp_sa_screen_count_barcodes_single", (DL_FUNC) &_gp_sa_screen_count_barcodes_single, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_gp_sa_screen(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
